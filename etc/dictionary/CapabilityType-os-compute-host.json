{ "capability_type_list" : 
[
  {
    "name": "ComputeDriverOptions",
    "namespace": "OS::COMPUTE::HOST",
    "description": "",
    "properties": {}
  },
  {
    "name": "ContainerVirtualization",
    "namespace": "OS::COMPUTE::HOST",
    "description": "Executables in containers. This is the virtual machine mode (vm_mode) used by LXC.  It may be used by the host properties filter for scheduling.",
    "derived_from": {
      "name": "VirtualizationMode",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "vm_mode": {
        "type": "string",
        "description": "",
        "defaultValue": "exe",
        "required": false,
        "confidential": false,
        "pattern": "exe"
      }
    }
  },
  {
    "name": "FullVirtualization",
    "namespace": "OS::COMPUTE::HOST",
    "description": "hvm Fully virtualized. This is the virtual machine mode (vm_mode) used by QEMU and KVM. It may be used by the host properties filter for scheduling.",
    "derived_from": {
      "name": "VirtualizationMode",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "vm_mode": {
        "type": "string",
        "description": "",
        "defaultValue": "hvm",
        "required": false,
        "confidential": false,
        "pattern": "hvm"
      }
    }
  },
  {
    "name": "HyperV",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The hypervisor type (hypervisor_type). It may be used by the host properties filter for scheduling.",
    "derived_from": {
      "name": "HypervisorType",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "hypervisor_type": {
        "type": "string",
        "description": "",
        "defaultValue": "hyperv",
        "required": false,
        "confidential": false,
        "pattern": "hyperv"
      }
    }
  },
  {
    "name": "HypervisorType",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The hypervisor type. It may be used by the host properties filter for scheduling. The ImagePropertiesFilter filters compute nodes that satisfy any architecture, hypervisor type, or virtual machine mode properties specified on the instance's image properties. Image properties are contained in the image dictionary in the request_spec.",
    "properties": {}
  },
  {
    "name": "KVM",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The hypervisor type (hypervisor_type). It may be used by the host properties filter for scheduling.",
    "derived_from": {
      "name": "HypervisorType",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "hypervisor_type": {
        "type": "string",
        "description": "",
        "defaultValue": "kvm",
        "required": false,
        "confidential": false,
        "pattern": "kvm"
      }
    }
  },
  {
    "name": "libvirtDriverOptions",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The libvirt compute driver options.  Sets hw_rng_model, hw_machine_type, hw_video_model, hw_video_ram, hw_watchdog_action, os_command_line properties.\n\nThese are properties specific to compute drivers.  For a list of all hypervisors, see here: https://wiki.openstack.org/wiki/HypervisorSupportMatrix",
    "derived_from": {
      "name": "ComputeDriverOptions",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "hw_video_model": {
        "type": "choice",
        "description": "The video image driver used.",
        "required": false,
        "confidential": false,
        "itemType": "string",
        "items": [
          "vga",
          "cirrus",
          "vmvga",
          "xen",
          "gxl"
        ]
      },
      "hw_machine_type": {
        "type": "string",
        "description": "Enables booting an ARM system using the specified machine type. By default, if an ARM image is used and its type is not specified, Compute uses vexpress-a15 (for ARMv7) or virt (for AArch64) machine types.\n\nLibvirt machine type. Valid types can be viewed by using the virsh capabilities command (machine types are displayed in the machine tag).",
        "required": false,
        "confidential": false
      },
      "hw_rng_model": {
        "type": "string",
        "description": "Adds a random-number generator device to the image's instances. The cloud administrator can enable and control device behavior by configuring the instance's flavor. By default, the generator device is disabled.",
        "defaultValue": "virtio",
        "required": false,
        "confidential": false
      },
      "hw_watchdog_action": {
        "type": "choice",
        "description": "Enables a virtual hardware watchdog device that carries out the specified action if the server hangs. The watchdog uses the i6300esb device (emulating a PCI Intel 6300ESB). If hw_watchdog_action is not specified, the watchdog is disabled.",
        "defaultValue": "disabled",
        "required": false,
        "confidential": false,
        "itemType": "string",
        "items": [
          "disabled",
          "reset",
          "poweroff",
          "pause",
          "none"
        ]
      },
      "os_command_line": {
        "type": "string",
        "description": "The kernel command line to be used by the libvirt driver, instead of the default. For linux containers (LXC), the value is used as arguments for initialization.",
        "required": false,
        "confidential": false
      }
    }
  },
  {
    "name": "LXC",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The hypervisor type (hypervisor_type). It may be used by the host properties filter for scheduling.",
    "derived_from": {
      "name": "HypervisorType",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "hypervisor_type": {
        "type": "string",
        "description": "",
        "defaultValue": "lxc",
        "required": false,
        "confidential": false,
        "pattern": "lxc"
      }
    }
  },
  {
    "name": "Qemu",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The hypervisor type (hypervisor_type). It may be used by the host properties filter for scheduling.",
    "derived_from": {
      "name": "HypervisorType",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "hypervisor_type": {
        "type": "string",
        "description": "",
        "defaultValue": "qemu",
        "required": false,
        "confidential": false,
        "pattern": "qemu"
      }
    }
  },
  {
    "name": "UserModeLinux-UML",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The uml hypervisor type (hypervisor_type). It may be used by the host properties filter for scheduling.",
    "derived_from": {
      "name": "HypervisorType",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "hypervisor_type": {
        "type": "string",
        "description": "",
        "defaultValue": "uml",
        "required": false,
        "confidential": false,
        "pattern": "uml"
      }
    }
  },
  {
    "name": "UserModeLinuxParavirtualization",
    "namespace": "OS::COMPUTE::HOST",
    "description": "umlï¿½User Mode Linux paravirtualized  virtual machine mode (vm_mode). It may be used by the host properties filter for scheduling.",
    "derived_from": {
      "name": "VirtualizationMode",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "vm_mode": {
        "type": "string",
        "description": "",
        "defaultValue": "uml",
        "required": false,
        "confidential": false,
        "pattern": "uml"
      }
    }
  },
  {
    "name": "VirtualizationMode",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The virtual machine mode. This represents the host/guest ABI (application binary interface) used for the virtual machine. The ImagePropertiesFilter filters compute nodes that satisfy any architecture, hypervisor type, or virtual machine mode properties specified on the instance's image properties. Image properties are contained in the image dictionary in the request_spec.",
    "properties": {}
  },
  {
    "name": "VMWare",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The hypervisor type (hypervisor_type). It may be used by the host properties filter for scheduling.",
    "derived_from": {
      "name": "HypervisorType",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "hypervisor_type": {
        "type": "string",
        "description": "",
        "defaultValue": "vmware",
        "required": false,
        "confidential": false,
        "pattern": "vmware"
      }
    }
  },
  {
    "name": "VMwareDriverOptions",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The VMWare compute driver.  Sets vmware_adaptertype, vmware_ostype, vmware_image_version properties.\n\nThese are properties specific to compute drivers.  For a list of all hypervisors, see here: https://wiki.openstack.org/wiki/HypervisorSupportMatrix",
    "derived_from": {
      "name": "ComputeDriverOptions",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "vmware_adaptertype": {
        "type": "choice",
        "description": "Indicates the virtual SCSI or IDE controller used by the hypervisor.",
        "required": false,
        "confidential": false,
        "itemType": "string",
        "items": [
          "lsiLogic",
          " busLogic",
          "ide"
        ]
      },
      "vmware_ostype": {
        "type": "string",
        "description": "A VMware GuestID which describes the operating system installed in the image. This will be passed to the hypervisor when creating a virtual machine. See thinkvirt.com for a list of valid values. If this is not specified, it will default to otherGuest.",
        "required": false,
        "confidential": false
      },
      "vmware_image_version": {
        "type": "string",
        "description": "Currently unused, set it to 1.",
        "defaultValue": "1",
        "required": false,
        "confidential": false
      }
    }
  },
  {
    "name": "Xen",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The hypervisor type (hypervisor_type). It may be used by the host properties filter for scheduling.",
    "derived_from": {
      "name": "HypervisorType",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "hypervisor_type": {
        "type": "string",
        "description": "",
        "defaultValue": "xen",
        "required": false,
        "confidential": false,
        "pattern": "xen"
      }
    }
  },
  {
    "name": "XenDriverOptions",
    "namespace": "OS::COMPUTE::HOST",
    "description": "The XenAPI Driver. Sets auto_disk_config and os_type.\n\nThese are properties specific to compute drivers.  For a list of all hypervisors, see here: https://wiki.openstack.org/wiki/HypervisorSupportMatrix",
    "derived_from": {
      "name": "ComputeDriverOptions",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "auto_disk_config": {
        "type": "boolean",
        "description": "If true, the root partition on the disk is automatically resized before the instance boots. This value is only taken into account by the Compute service when using a Xen-based hypervisor with the XenAPI driver. The Compute service will only attempt to resize if there is a single partition on the image, and only if the partition is in ext3 or ext4 format.",
        "required": false,
        "confidential": false
      },
      "os_type": {
        "type": "choice",
        "description": "The operating system installed on the image. The XenAPI driver contains logic that takes different actions depending on the value of the os_type parameter of the image. For example, for os_type=windows images, it creates a FAT32-based swap partition instead of a Linux swap partition, and it limits the injected host name to less than 16 characters.",
        "required": false,
        "confidential": false,
        "itemType": "string",
        "items": [
          "linux",
          "windows"
        ]
      }
    }
  },
  {
    "name": "XenParavirtualization",
    "namespace": "OS::COMPUTE::HOST",
    "description": "xenï¿½Xen 3.0 paravirtualized virtual machine mode (vm_mode). It may be used by the host properties filter for scheduling.",
    "derived_from": {
      "name": "VirtualizationMode",
      "namespace": "OS::COMPUTE::HOST"
    },
    "properties": {
      "vm_mode": {
        "type": "string",
        "description": "",
        "defaultValue": "xen",
        "required": false,
        "confidential": false,
        "pattern": "xen"
      }
    }
  }
] 
}